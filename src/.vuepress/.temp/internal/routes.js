export const redirects = JSON.parse("{\"/posts/AI/02%20LangChain%20+%20RAG%20%E5%AD%A6%E4%B9%A0%E5%AE%9E%E8%B7%B5.html\":\"/posts/AI/02%20LangChain%20_%20RAG%20%E5%AD%A6%E4%B9%A0%E5%AE%9E%E8%B7%B5.html\",\"/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/00%20%E5%BC%80%E5%8F%91%E7%A2%8E%E7%89%87%20-%20Java%20&%20SpringBoot.html\":\"/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/00%20%E5%BC%80%E5%8F%91%E7%A2%8E%E7%89%87%20-%20Java%20_%20SpringBoot.html\",\"/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/02%20%E5%BC%80%E5%8F%91%E7%A2%8E%E7%89%87%20-%20Redis%20&%20MQ.html\":\"/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/02%20%E5%BC%80%E5%8F%91%E7%A2%8E%E7%89%87%20-%20Redis%20_%20MQ.html\",\"/posts/%E8%BF%90%E7%BB%B4/01%20ELK%20&%20Grafana.html\":\"/posts/%E8%BF%90%E7%BB%B4/01%20ELK%20_%20Grafana.html\"}")

export const routes = Object.fromEntries([
  ["/", { loader: () => import(/* webpackChunkName: "index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/index.html.js"), meta: {"t":"Homepage","i":"home"} }],
  ["/intro.html", { loader: () => import(/* webpackChunkName: "intro.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/intro.html.js"), meta: {"e":"\n<h2>QA Career</h2>\n<p><a target=\"_blank\" href=\"https://www.baidu.com\"><img src=\"https://swtywang.fun/minio/blog/f0e6cc16eb24ad684ad34fbccca80356.webp\" style=\"width:40px; height:40px;margin:0px;border-radius:50%;display:inline;border-radius:100%\"></a> <a target=\"_blank\" href=\"https://www.maoyan.com\"> <img src=\"https://swtywang.fun/minio/assets/maoyan_icon.ico\" style=\"width:40px; height:40px;margin:0px;border-radius:50%;display:inline;border-radius:100%\"></a> <a target=\"_blank\" href=\"https://www.bytedance.com/zh/\"><img src=\"https://swtywang.fun/minio/blog/806e2c7b48ed4a4f74b8ff487cfe45c4.webp\" style=\"width:40px; height:40px;display:inline;margin:0px;border-radius:100%\"></a></p>","r":{"minutes":2.13,"words":640},"t":"About Me","i":"circle-info","y":"a"} }],
  ["/portfolio.html", { loader: () => import(/* webpackChunkName: "portfolio.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/portfolio.html.js"), meta: {"t":"档案主页","i":"home"} }],
  ["/posts/AI/00%20%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%88%86%E7%B1%BB%E5%99%A8%E8%B0%83%E7%A0%94.html", { loader: () => import(/* webpackChunkName: "posts_AI_00 机器学习分类器调研.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/AI/00 机器学习分类器调研.html.js"), meta: {"d":1426118400000,"l":"2015年3月12日","c":["AI"],"g":["AI"],"e":"<blockquote>\n<p>项目中的第三部分需要对各类预处理后的入侵事件实现精准&amp;快速识别，这需要借助机器学习算法完成。浅浅调研下常见的分类器算法：人工神经网络、SVM 向量机、Random Forest、Adaboost</p>\n</blockquote>\n<h2>RBF 神经网络</h2>\n<blockquote>\n<p>实验室正在使用的分类器</p>\n</blockquote>\n<p>RBF 神经网络属于一种单隐层的前馈网络，每一层的神经元的输出作为下一层神经元的输入，隐层神经元激活函数采用径向基函数，最终的输出层是对隐层神经元输出的加权组合。</p>\n<p>图示描述了 RBF 神经网络的结构。它主要包含三层：输入层（Q 个特征输入<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><msub><mi>p</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>p</mi><mrow><mi>Q</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">( p_0, p_1, \\ldots, p_{Q-1} )</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">Q</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>）、中间单隐层以及输出层（m 个输出<span v-pre=\"\" class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>z</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">( z_0, \\ldots, z_{m-1} )</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>）。输入层即特征提取阶段获得的入侵信号特征向量，将它们送入隐层的 h 个神经元中训练相关参数，最终结果在输出层通过参数的加权求和得到。此结构下的 RBF 神经网络输出可以表示为</p>","r":{"minutes":6.04,"words":1811},"t":"机器学习分类器调研","y":"a"} }],
  ["/posts/AI/01%20%E3%80%8A%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0.html", { loader: () => import(/* webpackChunkName: "posts_AI_01 《大语言模型》读书笔记.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/AI/01 《大语言模型》读书笔记.html.js"), meta: {"d":1713744000000,"l":"2024年4月22日","g":["AI"],"v":"https://swtywang.fun/minio/blog/90933ec38f15e3cdaf44a1e954f6bb6d.png","e":"<blockquote>\n<p><a href=\"https://github.com/LLMBook-zh/LLMBook-zh.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">书籍下载地址</a></p>\n<p>主要是科普，很多知识点还是需要投入大量时间学习</p>\n</blockquote>\n\n<h2>Part1 背景与基础知识</h2>\n<h3>1. 语言模型发展历程</h3>\n<ul>\n<li>\n<p>统计语言模型（SLM）：基于统计学习方法研发，使用马尔可夫假设来建立语言序列的预测模型，通常是根据词序</p>\n<p>列中若干个连续的上下文单词来预测下一个词的出现概率，即根据一个固定长度的前缀来预测目标单词。</p>\n</li>\n<li>\n<p>神经语言模型（NLM）：使用神经网络来建模文本序列的生成，如 RNN、word2vec</p>\n</li>\n<li>\n<p>预训练语言模型（PLM）：BERT 、GPT-1、GPT-2</p>\n</li>\n<li>\n<p>大语言模型（LLM）：通过规模扩展通常会带来下游任务的模型性能提升。GPT-3、GPT-4</p>\n</li>\n</ul>","r":{"minutes":12.51,"words":3753},"t":"《大语言模型》读书笔记","y":"a"} }],
  ["/posts/AI/02%20LangChain%20_%20RAG%20%E5%AD%A6%E4%B9%A0%E5%AE%9E%E8%B7%B5.html", { loader: () => import(/* webpackChunkName: "posts_AI_02 LangChain _ RAG 学习实践.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/AI/02 LangChain _ RAG 学习实践.html.js"), meta: {"d":1712880000000,"l":"2024年4月12日","g":["AI"],"v":"/assets/images/cover4.jpg","e":"\n<blockquote>\n<p>前置准备</p>\n<ol>\n<li>gpt 账号</li>\n<li>python3.11 以及相关依赖</li>\n</ol>\n</blockquote>\n<h2>LangChain 框架基础知识</h2>\n<blockquote>\n<p>LangChain Docs：</p>\n<ol>\n<li>快速入门：<a href=\"https://python.langchain.com/v0.2/docs/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">https://python.langchain.com/v0.2/docs/tutorials/</a></li>\n<li>具体 demo 实现：<a href=\"https://python.langchain.com/v0.2/docs/how_to/\" target=\"_blank\" rel=\"noopener noreferrer\">https://python.langchain.com/v0.2/docs/how_to/</a></li>\n<li>基本概念解释：<a href=\"https://python.langchain.com/v0.2/docs/concepts/\" target=\"_blank\" rel=\"noopener noreferrer\">https://python.langchain.com/v0.2/docs/concepts/</a></li>\n<li>API 文档：<a href=\"https://api.python.langchain.com/en/latest/langchain_api_reference.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://api.python.langchain.com/en/latest/langchain_api_reference.html</a></li>\n</ol>\n</blockquote>","r":{"minutes":7.74,"words":2323},"t":"LangChain + RAG 学习实践","y":"a"} }],
  ["/posts/AI/03%20Multi%20-%20agent%20%E5%AD%A6%E4%B9%A0%E5%AE%9E%E8%B7%B5.html", { loader: () => import(/* webpackChunkName: "posts_AI_03 Multi - agent 学习实践.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/AI/03 Multi - agent 学习实践.html.js"), meta: {"d":1713657600000,"l":"2024年4月21日","g":["AI"],"v":"https://swtywang.fun/minio/blog/0363646c9b886373501dad692957d280.png","e":"<blockquote>\n<p>现在有一些多智能体的框架或者产品，挑选三类主流且有区分度的学习下（LangGraph、AutoGen、Coze）</p>\n</blockquote>\n<h2>1. LangGraph</h2>\n<blockquote>\n<p>一个使用 LLM 构建有状态、多角色应用程序的库，可用于创建 agent 或者 multi-agents 流程。</p>\n<p>与 LangChain 的学习路径一样，LangGraph Docs：</p>\n<ul>\n<li>快速入门：<a href=\"https://langchain-ai.github.io/langgraph/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">https://langchain-ai.github.io/langgraph/tutorials/</a></li>\n<li>具体 Demo：<a href=\"https://langchain-ai.github.io/langgraph/how-tos/\" target=\"_blank\" rel=\"noopener noreferrer\">https://langchain-ai.github.io/langgraph/how-tos/</a></li>\n<li>基本概念：<a href=\"https://langchain-ai.github.io/langgraph/concepts/\" target=\"_blank\" rel=\"noopener noreferrer\">https://langchain-ai.github.io/langgraph/concepts/</a></li>\n</ul>\n</blockquote>","r":{"minutes":4.13,"words":1239},"t":"Multi - agent 学习实践","y":"a"} }],
  ["/posts/AI/04%20%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%9C%A8%E6%B5%8B%E8%AF%95%E9%A2%86%E5%9F%9F%E7%9A%84%E6%8E%A2%E7%B4%A2.html", { loader: () => import(/* webpackChunkName: "posts_AI_04 大模型在测试领域的探索.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/AI/04 大模型在测试领域的探索.html.js"), meta: {"d":1709510400000,"l":"2024年3月4日","g":["AI","质量架构"],"v":"/assets/images/cover4.jpg","e":"\n<h2>一些看法</h2>\n<blockquote>\n<p>大模型已抢占各类互联网大会、社区博客的头条，测试领域也已经有非常多的讨论。</p>\n</blockquote>\n<p>我认为现处于探索&gt;&gt;实际落地的阶段，主要因为以下几个原因：</p>\n<ol>\n<li>无法控制大模型的\"涌现\"能力：主流的技术路线 LangChain + RAG + Agent 可以快速上手并看到一些\"效果\"。但是，目前只看到了 demo 级别的成功，因为预期结果不够稳定 甚至无法预知，进而无法大规模落地。</li>\n<li>RAG 的数据质量：RAG 其实与大模型无关，主要是向量数据库的 topk 问题，他很大程度取决于训练数据结构、分词策略、embedding model、re-rank 策略等等，需要大量的实践经验。</li>\n<li>代码生成有点鸡肋：代码生成的难点在于输入参数与业务的融合以及断言逻辑，与传统的单测/接口用例生成效果相比，大模型生成并没有很大的提升。各大厂商的 IDE 助手并没有很惊艳的感觉。</li>\n<li>GPT4 比开源模型更加强大：由于数据安全的考虑，在方案落地时需要选用开源本地大模型，避免数据泄露。而诸多的本地大模型的体验效果比 GPT4 还是会有较大差距（Qwen2 据说很不错，还没有试用）</li>\n<li>大模型微调需要消耗大量的资源，以及有较高的技术门槛。</li>\n</ol>","r":{"minutes":3.17,"words":951},"t":"大模型在测试领域的探索","y":"a"} }],
  ["/posts/%E6%9D%82%E8%B4%A7%E9%93%BA/00%20%E6%94%AF%E4%BB%98%E8%B4%A6%E5%8A%A1%E4%B8%9A%E5%8A%A1%E7%9F%A5%E8%AF%86.html", { loader: () => import(/* webpackChunkName: "posts_杂货铺_00 支付账务业务知识.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/杂货铺/00 支付账务业务知识.html.js"), meta: {"d":1641945600000,"l":"2022年1月12日","g":["质量保障"],"e":"<blockquote>\n<p>主要记录项目中遇到过的通用支付知识</p>\n</blockquote>\n<h2>支付牌照</h2>\n<blockquote>\n<p>支付牌照，全称为《支付业务许可证》，是中国人民银行根据《非金融机构支付服务管理办法》颁发的，允许支付机构在全国范围内从事非金融机构支付业务的资格证书。支付牌照的颁发，旨在规范我国非金融机构的支付业务，防范金融风险，维护支付市场的公平竞争秩序。</p>\n</blockquote>\n<h2>直连模式 VS 服务商模式</h2>\n<blockquote>\n<p><a href=\"https://pay.weixin.qq.com/wiki/doc/apiv3_partner/open/pay/chapter3_3_1.shtml\" target=\"_blank\" rel=\"noopener noreferrer\">https://pay.weixin.qq.com/wiki/doc/apiv3_partner/open/pay/chapter3_3_1.shtml</a></p>\n</blockquote>","r":{"minutes":6.11,"words":1834},"t":"支付账务业务知识","y":"a"} }],
  ["/posts/%E6%9D%82%E8%B4%A7%E9%93%BA/01%20%E5%AE%89%E5%8D%93%E5%BF%AB%E5%BA%94%E7%94%A8.html", { loader: () => import(/* webpackChunkName: "posts_杂货铺_01 安卓快应用.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/杂货铺/01 安卓快应用.html.js"), meta: {"d":1689120000000,"l":"2023年7月12日","g":["前端"],"v":"/assets/images/cover4.jpg","e":"<p>参考资料：</p>\n<ol>\n<li><a href=\"https://juejin.cn/post/6844903586971779080?searchId=202409221441301C35F5C366847F801E93\" target=\"_blank\" rel=\"noopener noreferrer\">快应用入门，看这篇就够了</a></li>\n<li><a href=\"https://juejin.cn/post/7137222956324765709?searchId=202409221441301C35F5C366847F801E93\" target=\"_blank\" rel=\"noopener noreferrer\">什么是快应用？与原生 APP 相比优势在哪里?</a></li>\n<li><a href=\"https://juejin.cn/post/6844903583415009294?searchId=202409221441301C35F5C366847F801E93\" target=\"_blank\" rel=\"noopener noreferrer\">快应用-技术调研</a></li>\n<li><a href=\"https://www.quickapp.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">快应用厂商</a></li>\n</ol>","r":{"minutes":0.28,"words":85},"t":"安卓快应用","y":"a"} }],
  ["/posts/%E6%9D%82%E8%B4%A7%E9%93%BA/02%20%E9%87%91%E8%9E%8D%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html", { loader: () => import(/* webpackChunkName: "posts_杂货铺_02 金融基础知识.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/杂货铺/02 金融基础知识.html.js"), meta: {"d":1700179200000,"l":"2023年11月17日","g":["金融"],"e":"<blockquote>\n<p>美联储降息意味着美国联邦储备系统降低其设定的基准利率。这通常是为了刺激经济增长或防止经济衰退。降息可以提高消费者和企业的信贷可用性和信贷成本，促进投资和支出，从而提振经济活动。</p>\n</blockquote>\n<blockquote>\n<p>资料：</p>\n<ol>\n<li>降息对美股影响曲线：<a href=\"https://www.macromicro.me/charts/72513/mei-guo-jiang-xi-dui-gu-shi-de-ying-xiang\" target=\"_blank\" rel=\"noopener noreferrer\">美國降息對股市的影響</a></li>\n<li>降息预测&amp;关键数据：<a href=\"https://www.macromicro.me/macro/us\" target=\"_blank\" rel=\"noopener noreferrer\">美國總經成績單 | 總經 | MacroMicro 財經 M 平方</a></li>\n<li>降息周期大类资产走势：<a href=\"https://pdf.dfcfw.com/pdf/H3_AP202201071538959251_1.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">H3_AP202201071538959251_1</a></li>\n</ol>\n</blockquote>","r":{"minutes":1.19,"words":356},"t":"金融基础知识","y":"a"} }],
  ["/posts/%E6%9D%82%E8%B4%A7%E9%93%BA/03%20%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86.html", { loader: () => import(/* webpackChunkName: "posts_杂货铺_03 前端知识.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/杂货铺/03 前端知识.html.js"), meta: {"d":1531353600000,"l":"2018年7月12日","g":["前端"],"v":"/assets/images/cover4.jpg","e":"<h2>核心方法属性</h2>\n<p>**data：****用于声明组件初始响应式状态的函数。**<a href=\"https://cn.vuejs.org/api/options-state.html#data\" target=\"_blank\" rel=\"noopener noreferrer\">https://cn.vuejs.org/api/options-state.html#data</a></p>\n<p>**props：****用于声明一个组件的 props。**<a href=\"https://cn.vuejs.org/api/options-state.html#props\" target=\"_blank\" rel=\"noopener noreferrer\">https://cn.vuejs.org/api/options-state.html#props</a></p>","r":{"minutes":1.73,"words":518},"t":"前端知识","y":"a"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/00%20%E5%BC%80%E5%8F%91%E7%A2%8E%E7%89%87%20-%20Java%20_%20SpringBoot.html", { loader: () => import(/* webpackChunkName: "posts_后端开发_00 开发碎片 - Java _ SpringBoot.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/00 开发碎片 - Java _ SpringBoot.html.js"), meta: {"d":1575244800000,"l":"2019年12月2日","c":["server"],"g":["Java","server"],"v":"/assets/images/background.jpeg","e":"<blockquote>\n<p>记录一些开发过程中遇到的问题和解决思路</p>\n</blockquote>\n<h3>方法传值</h3>\n<p>Java 方法中实参传递方式是 <strong>值传递</strong>：</p>\n<ul>\n<li>如果参数是基本类型和字符串，传递的就是基本类型的字面量值的拷贝，会创建副本。</li>\n<li>如果参数是引用类型（JavaBean、数组），传递的就是实参所引用的对象在堆中地址值的拷贝，同样也会创建副本</li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//测试代码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//分别选取JavaBean、JSONObject、int、Integer测试</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> test</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> init</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        DataUnit</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> dataUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> DataUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        dataUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"aaa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        JSONObject</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> obj</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> JSONObject</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        obj</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">put</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"aa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"bb\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">        int</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> s</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"init\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"DataUnit type before:\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> dataUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"JSONObject type before:\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> obj</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getString</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"aa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"int type before:\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> a);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"数组 before:\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> b[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"String type before:\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> s);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        changeData</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(dataUnit, obj, a, b,s);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"dataUnit value after:\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> dataUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"obj after:\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> obj</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getString</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"aa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"a after:\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> a);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"数组 type after:\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> b[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"String type after:\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> s);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> changeData</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">DataUnit</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> dataUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">JSONObject</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> object</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> i</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">int</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">j</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> s</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        dataUnit</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"bbb\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        object</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">put</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"aa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"cc\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        i </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        j[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">] </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 3333</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        s </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"update\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> main</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">args</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> test</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">().</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">init</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":4.13,"words":1239},"t":"开发碎片 - Java & SpringBoot","s":"开发碎片 - Java & SpringBoot","y":"a"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/01%20%E5%BC%80%E5%8F%91%E7%A2%8E%E7%89%87%20-%20Nginx.html", { loader: () => import(/* webpackChunkName: "posts_后端开发_01 开发碎片 - Nginx.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/01 开发碎片 - Nginx.html.js"), meta: {"d":1486771200000,"l":"2017年2月11日","g":["server"],"v":"/assets/images/cover4.jpg","e":"<h3>0. nginx 日志分析</h3>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>","r":{"minutes":4.23,"words":1268},"t":"开发碎片 - Nginx","s":"开发碎片 - Nginx","y":"a"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/02%20%E5%BC%80%E5%8F%91%E7%A2%8E%E7%89%87%20-%20Redis%20_%20MQ.html", { loader: () => import(/* webpackChunkName: "posts_后端开发_02 开发碎片 - Redis _ MQ.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/02 开发碎片 - Redis _ MQ.html.js"), meta: {"d":1528761600000,"l":"2018年6月12日","g":["Java","server"],"v":"/assets/images/cover4.jpg","e":"<h2>Redis 数据结构</h2>\n<p>Redis 可以存储键与 5 种不同数据结构类型之间的映射，分别为 STRING(字符串)、 LIST(列表)、 SET(几核)、 HASH(散列)、 ZSET(有序集合)<br>\n命令大全：<a href=\"http://www.redis.net.cn/order/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.redis.net.cn/order/</a></p>\n<h3>字符串 String</h3>\n<ul>\n<li>set : 设置指定 key 的值</li>\n<li>get : 获取指定 key 的值。</li>\n<li>mget : 获取所有(一个或多个)给定 key 的值。</li>\n<li>strlen : 返回 key 所储存的字符串值的长度。</li>\n<li>incr : 将 key 中储存的数字值增一。</li>\n<li>incrby: 将 key 所储存的值加上给定的增量值（increment） 。</li>\n<li>decr : 将 key 中储存的数字值减一。</li>\n<li>decrby: key 所储存的值减去给定的减量值（decrement） 。</li>\n<li>append: 如果 key 已经存在并且是一个字符串， APPEND 命令将 value 追加到 key 原来的值的末尾。</li>\n</ul>","r":{"minutes":11.14,"words":3342},"t":"开发碎片 - Redis & MQ","s":"开发碎片 - Redis & MQ","y":"a"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/03%20Java%E6%A0%88%20-%20%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html", { loader: () => import(/* webpackChunkName: "posts_后端开发_03 Java栈 - 动态代理.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/03 Java栈 - 动态代理.html.js"), meta: {"d":1642896000000,"l":"2022年1月23日","g":["Java","server","质量架构"],"v":"/ssets/images/cover3.jpg","e":"<h2>1. 代理的作用</h2>\n<p>在不侵入原有代码的前提下实现代码增强，<strong>比如说在目标对象的某个方法执行前后可以增加一些自定义的操作。</strong></p>\n<h2>2. 静态代理</h2>\n<p>静态代理中，我们对目标对象的每个方法的增强都是手动完成的，这种代理方式需要代理对象和目标对象实现一样的接口。</p>\n<p>从 JVM 层面来说， 静态代理在编译时就将接口、实现类、代理类这些都变成了一个个实际的 class 文件。</p>\n<p>优点：可以在不修改目标对象的前提下扩展目标对象的功能。</p>\n<p>缺点：</p>\n<ol>\n<li>冗余。由于代理对象要实现与目标对象一致的接口，会产生过多的代理类。</li>\n<li>不易维护。一旦接口增加方法，目标对象与代理对象都要进行修改。</li>\n</ol>","r":{"minutes":14.89,"words":4467},"t":"Java栈 - 动态代理","s":"Java栈 - 动态代理","y":"a"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/04%20Java%E6%A0%88%20-%20SPI.html", { loader: () => import(/* webpackChunkName: "posts_后端开发_04 Java栈 - SPI.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/04 Java栈 - SPI.html.js"), meta: {"d":1597190400000,"l":"2020年8月12日","g":["Java","质量架构"],"v":"https://swtywang.fun/minio/blog/a0f307f1e263d792ee09e70c1d81898f.jpg","e":"\n<p>SPI 全称 Service Provider Interface，是 Java 提供的一套用来被第三方实现或者扩展的 API，它可以用来启用框架扩展和替换组件。</p>\n<figure><img src=\"https://swtywang.fun/minio/blog/a0f307f1e263d792ee09e70c1d81898f.jpg\" alt=\"SPI\" tabindex=\"0\" loading=\"lazy\"><figcaption>SPI</figcaption></figure>\n<p>整体机制如上图，Java SPI 实际上是“<strong>基于接口的编程＋策略模式＋配置文件</strong>”组合实现的动态加载机制。</p>","r":{"minutes":4.64,"words":1392},"t":"Java栈 - SPI","s":"Java栈 - SPI","y":"a"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/05%20Java%E6%A0%88%20-%20JVM.html", { loader: () => import(/* webpackChunkName: "posts_后端开发_05 Java栈 - JVM.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/05 Java栈 - JVM.html.js"), meta: {"d":1578787200000,"l":"2020年1月12日","g":["Java","server"],"v":"/assets/images/cover4.jpg","e":"\n<p>Java 虚拟机主要分为 方法区、堆、虚拟机栈、本地方法栈、程序计数器五个区域，下面依次介绍各个区域。</p>\n<h2>1.1 程序计数器（线程私有）</h2>\n<p>当前线程所执行执行的<strong>字节码行号指示器</strong>。<br>\nJVM 概念模型中，<strong>字节码解析器</strong>会通过改变程序计数器的值来选取下一条需要执行的字节码指令，分支、循环、跳转、异常处理、线程回复等基础功能都需要该计数器完成。<br>\n由于<strong>JVM 多线程</strong>通过**线程轮切（并发）**实现，在任何一个确定时刻，一个处理器都只会执行一条线程的指令。因此线程之间计数器互相独立。<br>\n如果线程正在执行的是一个 Java 方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；如果正在执行的是 Native 方法(java 调用非 java 代码的接口)，这个计数器值为 Undefined。</p>","r":{"minutes":19.9,"words":5971},"t":"Java栈 - JVM","y":"a"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/06%20%E5%88%86%E5%B8%83%E5%BC%8F%20-%20%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.html", { loader: () => import(/* webpackChunkName: "posts_后端开发_06 分布式 - 分布式锁.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/06 分布式 - 分布式锁.html.js"), meta: {"d":1620777600000,"l":"2021年5月12日","g":["Java","微服务","server"],"v":"/assets/images/cover4.jpg","e":"<h2>1. 背景</h2>\n<p>我们在日常的工作中，有时候会碰到一些高并发的场景，比如，电商业务场景下的秒杀活动，春节活动中的抢红包，银行转账，出行抢票等，这些场景有一个共同特点就是在短时间内存在极高的峰值 qps。虽然在系统设计中，我们会通过异步限流、削峰填谷等方式进行优化，但整体的系统流量还是会在平时的数倍以上。因此，为了避免高并发带来的问题（如库存超卖，代金券超发等），这些系统通常都会用到锁的机制。</p>\n<p>对于单进程的并发场景，可以使用编程语言及相应的类库提供的锁，如 Java 中的 synchronized 语法以及 ReentrantLock 类，Golang 中的 sync 包等，避免并发问题。在实际的业务场景中，一般均为多实例部署，因此不在此处做过多的篇幅介绍。</p>","r":{"minutes":18.64,"words":5592},"t":"分布式 - 分布式锁","y":"a"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/07%20%E5%88%86%E5%B8%83%E5%BC%8F%20-%20%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.html", { loader: () => import(/* webpackChunkName: "posts_后端开发_07 分布式 - 分布式事务.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/07 分布式 - 分布式事务.html.js"), meta: {"d":1655856000000,"l":"2022年6月22日","g":["Java","微服务","server"],"v":"/assets/images/cover4.jpg","e":"<blockquote>\n<p>分布式事务主要解决分布式一致性的问题（数据的分布式操作导致仅依靠本地事务无法保证原子性）。</p>\n</blockquote>\n<h2>分布式事务场景</h2>\n<h3>下单扣库存</h3>\n<p>在电商系统中，下单是用户最常见操作。在下单接口中必定会涉及生成订单 id, 扣减库存等操作，对于微服务架构系统，订单 id 与库存服务一般都是独立的服务，此时就需要分布式事务来保证整个下单接口的成功。</p>\n<h3>支付</h3>\n<p>转账是最经典那的分布式事务场景，假设用户 A 使用银行 app 发起一笔跨行转账给用户 B，银行系统首先扣掉用户 A 的钱，然后增加用户 B 账户中的余额。此时就会出现 2 种异常情况：1. 用户 A 的账户扣款成功，用户 B 账户余额增加失败 2. 用户 A 账户扣款失败，用户 B 账户余额增加成功。对于银行系统来说，以上 2 种情况都是不允许发生，此时就需要分布式事务来保证转账操作的成功。</p>","r":{"minutes":9.54,"words":2862},"t":"分布式 - 分布式事务","y":"a"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/08%20%E5%88%86%E5%B8%83%E5%BC%8F%20-%20RPC.html", { loader: () => import(/* webpackChunkName: "posts_后端开发_08 分布式 - RPC.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/08 分布式 - RPC.html.js"), meta: {"d":1616025600000,"l":"2021年3月18日","g":["server"],"v":"/assets/images/cover4.jpg","e":"<h2>RPC 基本概念</h2>\n<ul>\n<li>\n<p>RPC（Remote Procedure Call）：远程过程调用，属于跨进程调用的一种方式。</p>\n</li>\n<li>\n<p>使用场景：微服务系统中，客户端与服务端通常用 REST API 交互，后端不同系统之间通常使用 RPC 调用（微服务架构下的服务调用量上升，rpc 调用可以提升整体性能）。</p>\n</li>\n</ul>\n<h2>RPC 的调用过程</h2>\n<figure><img src=\"https://swtywang.fun/minio/blog/731c06887c3203784be592f718642f75.jpg\" alt=\"37345851\" tabindex=\"0\" loading=\"lazy\"><figcaption>37345851</figcaption></figure>","r":{"minutes":5.85,"words":1756},"t":"分布式 - RPC","y":"a"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/09%20%E5%85%B6%E4%BB%96%20-%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html", { loader: () => import(/* webpackChunkName: "posts_后端开发_09 其他 - 设计模式.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/09 其他 - 设计模式.html.js"), meta: {"d":1652313600000,"l":"2022年5月12日","g":["Java","server"],"v":"/assets/images/cover4.jpg","e":"<h2>1. 工厂 + 策略模式</h2>\n<h3>场景</h3>\n<p>适合需要写很多 if/else 判断、具有相同属性/方法的多种实例调用，比如聚合支付、打折策略</p>\n<h3>模式概要</h3>\n<ul>\n<li>工厂模式：工厂模式是一种创建型设计模式，它提供了一种创建对象的方式，而无需在代码中明确指定要创建的具体类。工厂模式通过定义一个接口或抽象类，让子类决定要实例化的类是哪一个，从而把对象的创建过程抽象化。</li>\n<li>策略模式：策略模式是一种行为型设计模式，它定义了一系列算法，把它们一个个封装起来，并且使它们可以相互替换。本模式使得算法可以独立于使用它的客户端变化。通常包含公共接口类、策略实现类以及 Context</li>\n</ul>","r":{"minutes":2.71,"words":813},"t":"其他 - 设计模式","y":"a"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/10%20Java%E6%A0%88%20-%20ThreadLocal.html", { loader: () => import(/* webpackChunkName: "posts_后端开发_10 Java栈 - ThreadLocal.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/10 Java栈 - ThreadLocal.html.js"), meta: {"d":1631404800000,"l":"2021年9月12日","g":["server"],"v":"/assets/images/cover4.jpg","e":"<h2>ThreadLocal</h2>\n<h3>简介</h3>\n<p>多线程访问同一个变量容易出现并发问题，特别是多个线程对一个变量进行写入的时候，为了保证线程安全，一般使用者在访问共享变量的时候需要进行额外的同步措施才能保证线程安全性。ThreadLocal 是除了加锁这种同步方式之外的一种保证一种规避多线程访问出现线程不安全的方法，当我们在创建一个变量后，如果每个线程对其进行访问的时候访问的都是线程自己的变量这样就不会存在线程不安全问题。</p>\n<h4>简单示例</h4>\n<p>比如现在有 4 个线程，通过 ThreadLocal 可以实现每个线程持有自己独有的值</p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" data-title=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadLocalHelloWorld</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">   private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> threadLocalValue </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">withInitial</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(() </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Integer</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> threadLocalValue1 </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">withInitial</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(() </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> main</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">args</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Thread</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> thread1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(() </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            threadLocalValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">10</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 设置线程1的 ThreadLocal 值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            threadLocalValue1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">10</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 设置线程1的 ThreadLocal 值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">            printThreadLocalValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Thread 1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Thread</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> thread2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(() </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            threadLocalValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">20</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 设置线程2的 ThreadLocal 值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            threadLocalValue1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 设置线程2的 ThreadLocal 值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">            printThreadLocalValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Thread 2\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        Thread</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> thread3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(() </span><span style=\"--shiki-light:#C18401;--shiki-dark:#C678DD\">-&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            threadLocalValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">30</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 设置线程3的 ThreadLocal 值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            threadLocalValue1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">30000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 设置线程3的 ThreadLocal 值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">            printThreadLocalValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Thread 3\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        thread1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">start</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        thread2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">start</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        thread3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">start</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        threadLocalValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 设置线程1的 ThreadLocal 值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        threadLocalValue1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">set</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 设置线程1的 ThreadLocal 值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">        printThreadLocalValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Thread 0\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        // 等待所有线程结束</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            thread1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">join</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            thread2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">join</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            thread3</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">join</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">InterruptedException</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">            e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">printStackTrace</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> printThreadLocalValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> threadName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(threadName </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \" ThreadLocal Value: \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> threadLocalValue</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        System</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(threadName </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \" ThreadLocal Value: \"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> threadLocalValue1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">());</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Thread </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> Value</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Thread </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> Value</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Thread </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> Value</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> -</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1000</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Thread </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> Value</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 10</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Thread </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> Value</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 20</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Thread </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> Value</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 30</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Thread </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> Value</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2000</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Thread </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">3</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ThreadLocal</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> Value</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 30000</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":5.92,"words":1775},"t":"Java栈 - ThreadLocal","y":"a"} }],
  ["/posts/QA/00%20%E8%B4%A8%E9%87%8F%E4%BD%93%E7%B3%BB%20-%20%E6%A6%82%E8%BF%B0.html", { loader: () => import(/* webpackChunkName: "posts_QA_00 质量体系 - 概述.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/00 质量体系 - 概述.html.js"), meta: {"d":1678492800000,"l":"2023年3月11日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<h2>如何制定？</h2>\n<blockquote>\n<p>制定适合业务的质量保障体系，与业务发展阶段、质量目标、质量痛点、业务特型、RD/QA/PM 团队情况等都有较大关联。</p>\n</blockquote>\n<h3>0. 通用体系</h3>\n<h3>1. 生命周期</h3>\n<p>产品的生命周期包括探索期、成长期、成熟期和衰退期，QA 同样需要基于业务发展的不同阶段 针对性指定响应策略。</p>\n<ul>\n<li>\n<p>探索期：</p>\n<ul>\n<li>产品目标：快速试错 明确产品定位 走通商业模式</li>\n<li>产品特点：效率第一，用户量少，场景相对简单</li>\n<li>质量目标：测试效率优先，保证交付，质量容忍度高</li>\n<li>质量风险：野蛮生长</li>\n<li>保障思路：业务优先 建立信任；测试技术 &gt; 测试专项；结合公司基建低成本搭建通用的测试工具；建立初步的研发测试流程</li>\n</ul>\n</li>\n<li>\n<p>成长期</p>\n<ul>\n<li>产品目标：DAU/营收迅猛扩张，超越竞品</li>\n<li>产品特点：玩法变多，策略变复杂，QPS 上涨</li>\n<li>质量目标：对测试质量要求提升，线上 P0 问题收敛</li>\n<li>质量风险：质量兜底能力薄弱；代码变更风险</li>\n<li>质量目标&amp;思路：完善研发测试流程；建立测试专项；质量度量与运营；QA 人力补充与分工</li>\n</ul>\n</li>\n<li>\n<p>成熟期</p>\n<ul>\n<li>产品目标：DAU/营收在高位趋于稳定，建立口碑</li>\n<li>产品特点：技术突破；成本控制</li>\n<li>质量目标：低逃逸率低、人效提升</li>\n<li>质量风险：长尾问题；回归成本；管控能力</li>\n<li>质量目标&amp;思路：CICD；成熟度模型；业务特型</li>\n</ul>\n</li>\n</ul>","r":{"minutes":3.09,"words":928},"t":"质量体系 - 概述","y":"a"} }],
  ["/posts/QA/01%20%E6%B5%8B%E8%AF%95%E8%A7%84%E8%8C%83.html", { loader: () => import(/* webpackChunkName: "posts_QA_01 测试规范.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/01 测试规范.html.js"), meta: {"d":1646956800000,"l":"2022年3月11日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<h3>2.1 测试前：</h3>\n<ul>\n<li>需求评审：</li>\n</ul>\n<p>理解业务是第一要义，在梳理清楚需求点以及交互后，可以尝试做下面的事情（挑重点需求，毕竟没那么多时间）：思考如果是自己来设计技术方案该怎么做（包含不限于 ① 主流程的时序图 ② 涉及的接口，每个接口要处理的核心逻辑以及用到的中间件 ③ 会有哪些异常场景 ④ 自己的方案可能会产生或者无法解决什么问题）。</p>\n<p>我认为这个过程很有帮助：1）主动思考后产生的想法和问题，会让后面的技术评审、用例编写等环节更充分有效，不会变成 QA/RD 一方的表演，会碰撞出很多隐藏问题 2）不断提升自己的技术能力与业务理解，一方面可以发现更多系统设计上的缺陷 提升代码质量，另一方面大部分的测试平台会使用与业务一致的技术栈，在平台开发时更加得心应手 3）与研发可以平等交流，增进信任度。很多业务线研发认为 QA 只会点点点，往往并不愿意与 QA 进行很深入的交流，QA 在推动质量专项时也会很被动</p>","r":{"minutes":3.06,"words":917},"t":"测试规范","y":"a"} }],
  ["/posts/QA/02%20%E6%B5%8B%E8%AF%95%E6%8A%80%E6%9C%AF%20-%20%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1.html", { loader: () => import(/* webpackChunkName: "posts_QA_02 测试技术 - 测试用例设计.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/02 测试技术 - 测试用例设计.html.js"), meta: {"d":1662854400000,"l":"2022年9月11日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<h3>白盒测试 &amp; 黑盒测试</h3>\n<figure><img src=\"https://swtywang.fun/minio//blog/0e8cea764bcc14c05afb6cff16265b20.png\" alt=\"测试用例设计方法\" tabindex=\"0\" loading=\"lazy\"><figcaption>测试用例设计方法</figcaption></figure>\n<h4>黑盒测试</h4>\n<blockquote>\n<p>支付活动促销需求：</p>\n<ul>\n<li>40 元及以上的订单可享受 5 折优惠</li>\n<li>最高优惠 30 元</li>\n</ul>\n</blockquote>","r":{"minutes":1.69,"words":506},"t":"测试技术 - 测试用例设计","y":"a"} }],
  ["/posts/QA/03%20%E6%B5%8B%E8%AF%95%E6%8A%80%E6%9C%AF%20-%20%E5%8F%AF%E6%B5%8B%E6%80%A7%E9%97%AE%E9%A2%98.html", { loader: () => import(/* webpackChunkName: "posts_QA_03 测试技术 - 可测性问题.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/03 测试技术 - 可测性问题.html.js"), meta: {"d":1627776000000,"l":"2021年8月1日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<blockquote>\n<p>\"可测性问题\"经常会出现在 QA 团队的 TOP 痛点问题中，针对这些问题的解决思路每个团队也不尽相同。这里会持续记录遇到过的典型可测性问题，并尝试做一些聚类</p>\n</blockquote>\n<figure><img src=\"https://swtywang.fun/minio//blog/e325063fad1b3d8fafc03c451ad30c59.png\" alt=\"whiteboard_exported_image (7)\" tabindex=\"0\" loading=\"lazy\"><figcaption>whiteboard_exported_image (7)</figcaption></figure>","r":{"minutes":1.16,"words":349},"t":"测试技术 - 可测性问题","y":"a"} }],
  ["/posts/QA/04%20%E6%B5%8B%E8%AF%95%E6%8A%80%E6%9C%AF%20-%20%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93.html", { loader: () => import(/* webpackChunkName: "posts_QA_04 测试技术 - 服务端测试方法总结.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/04 测试技术 - 服务端测试方法总结.html.js"), meta: {"d":1673481600000,"l":"2023年1月12日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<h2>一、微服务架构</h2>\n<blockquote>\n<p>微服务已成为主流的系统架构，只有对整体架构有了一定了解后，才能更清楚需要测试什么，在哪些地方会存在风险。</p>\n</blockquote>\n<p>下图展示了微服务的全景组成，也很清晰的展示了一条请求的完整链路。各大互联网公司都会在此基础上开发更加定制化的组件。</p>\n<figure><img src=\"https://swtywang.fun/minio/blog/8142ce5cb9e65c10c6e24c70ca3e9cfc.webp\" alt=\"Spring Cloud微服务架构图\" tabindex=\"0\" loading=\"lazy\"><figcaption>Spring Cloud微服务架构图</figcaption></figure>","r":{"minutes":8.86,"words":2659},"t":"测试技术 - 服务端测试总结","y":"a"} }],
  ["/posts/QA/05%20%E6%B5%8B%E8%AF%95%E4%B8%93%E9%A1%B9%20-%20%E8%B5%84%E6%8D%9F%E9%98%B2%E6%8E%A7.html", { loader: () => import(/* webpackChunkName: "posts_QA_05 测试专项 - 资损防控.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/05 测试专项 - 资损防控.html.js"), meta: {"d":1654992000000,"l":"2022年6月12日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<blockquote>\n<p>关于\"资损防控\"的主要是来自《阿里测试之道》和支付系统的测试工作，现在部门也花了较大精力开展资损防控专项，主要思路也是基于阿里的延续和补充。本章节分为两部分：1）梳理《阿里测试之道》关于资损防控的思路 2）结合工作实践的一些想法</p>\n</blockquote>\n<h2>《阿里测试之道》资损防控</h2>\n<h3>1. 资损风险防控体系</h3>\n<p>资损指由于产品设计缺陷、产品实现异常、员工操作错误导到致的公司或公司客户蒙受<br>\n的直接或间接的资金损失。</p>\n<p>资损防控包括防和控两项工作，资损风险防控体系如下：</p>\n<figure><img src=\"https://swtywang.fun/minio//blog/5950daaf7c034c94e02d19ba1fb7e254.png\" alt=\"image-20240922104701659\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20240922104701659</figcaption></figure>","r":{"minutes":2.62,"words":786},"t":"测试专项 - 资损防控","y":"a"} }],
  ["/posts/QA/06%20%E6%B5%8B%E8%AF%95%E4%B8%93%E9%A1%B9%20-%20%E8%B4%A8%E9%87%8F%E5%86%85%E5%BB%BA.html", { loader: () => import(/* webpackChunkName: "posts_QA_06 测试专项 - 质量内建.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/06 测试专项 - 质量内建.html.js"), meta: {"d":1646956800000,"l":"2022年3月11日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<blockquote>\n<p>分别从平台开发者和业务使用者角度总结一下精准测试/质量预防的一些工作</p>\n</blockquote>\n<h2>一、 平台建设</h2>\n<h3>建设目标</h3>\n<p>降低由于代码变更引发的线上/线下问题数，提升研发代码质量以及测试质量</p>\n<h3>核心能力</h3>\n<ul>\n<li>影响范围精准评估 =&gt; 基于微服务的链路追踪（静态/动态）</li>\n<li>测试用例精准推荐 =&gt; 测试用例与代码关联（服务级/方法级/接口级）</li>\n<li>测试结果精准度量 =&gt; 单测/接口自动化/手工测试的覆盖率分析、代码扫描、技术栈、CR 指标</li>\n<li>打通 CI/CD 流水线 =&gt; 为 devops 提供原子能力</li>\n</ul>","r":{"minutes":8.14,"words":2441},"t":"测试专项 - 质量内建","y":"a"} }],
  ["/posts/QA/07%20%E6%B5%8B%E8%AF%95%E4%B8%93%E9%A1%B9%20-%20%E7%9B%91%E6%8E%A7%E6%B2%BB%E7%90%86%E3%80%81%E5%BC%BA%E5%BC%B1%E4%BE%9D%E8%B5%96%E6%B2%BB%E7%90%86.html", { loader: () => import(/* webpackChunkName: "posts_QA_07 测试专项 - 监控治理、强弱依赖治理.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/07 测试专项 - 监控治理、强弱依赖治理.html.js"), meta: {"d":1646956800000,"l":"2022年3月11日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<ul>\n<li></li>\n</ul>\n<p><a href=\"https://cloud.tencent.com/developer/article/1965803\" target=\"_blank\" rel=\"noopener noreferrer\">https://cloud.tencent.com/developer/article/1965803</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000041720534?utm_source=sf-similar-article\" target=\"_blank\" rel=\"noopener noreferrer\">https://segmentfault.com/a/1190000041720534?utm_source=sf-similar-article</a></p>","r":{"minutes":0.22,"words":65},"t":"测试专项 - 监控治理、强弱依赖治理","y":"a"} }],
  ["/posts/QA/08%20%E6%B5%8B%E8%AF%95%E4%B8%93%E9%A1%B9%20-%20%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95.html", { loader: () => import(/* webpackChunkName: "posts_QA_08 测试专项 - 接口自动化测试.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/08 测试专项 - 接口自动化测试.html.js"), meta: {"d":1705017600000,"l":"2024年1月12日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<h2>概述</h2>\n<blockquote>\n<p>接口自动化的价值：</p>\n<ol>\n<li>线上巡检</li>\n<li>提升测试效率/ 测试左移</li>\n<li>CICD 门禁 / 质量兜底</li>\n</ol>\n</blockquote>\n<ul>\n<li>\n<p>一条接口自动化的成本 = 编写成本 + 调试成本 + 维护成本。</p>\n</li>\n<li>\n<p>一条接口自动化的收益 = 线上问题发现 + 测试人日下降 + 测试阶段问题发现</p>\n</li>\n</ul>\n<h2>TestNG 编写实践</h2>\n<blockquote>\n<p>以 TestNG 为例，一条接口自动化基本包含 数据准备 -&gt; 参数构造 -&gt; 接口请求 -&gt; 断言 -&gt; 数据清理</p>\n<p>官方文档：<a href=\"https://testng.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://testng.org/</a></p>\n</blockquote>","r":{"minutes":4.45,"words":1335},"t":"测试专项 - 接口自动化测试","y":"a"} }],
  ["/posts/QA/09%20%E6%B5%8B%E8%AF%95%E4%B8%93%E9%A1%B9%20-%20%E5%85%A8%E9%93%BE%E8%B7%AF%E5%8E%8B%E6%B5%8B%E4%B8%8E%E6%95%85%E9%9A%9C%E6%BC%94%E7%BB%83.html", { loader: () => import(/* webpackChunkName: "posts_QA_09 测试专项 - 全链路压测与故障演练.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/09 测试专项 - 全链路压测与故障演练.html.js"), meta: {"d":1586563200000,"l":"2020年4月11日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<h2>全链路压测基本流程</h2>\n<blockquote>\n<p><a href=\"https://tech.meituan.com/2019/02/14/full-link-pressure-test-automation.html\" target=\"_blank\" rel=\"noopener noreferrer\">全链路压测自动化实践</a></p>\n</blockquote>\n<h3>Step1. 目标预估</h3>\n<ol>\n<li>预估票房区间 =&gt; 大数据</li>\n<li>压测目标值 = 预估值 * X</li>\n</ol>\n<p>核心链路梳理 + 历史同期 Top 接口 + 近期 Top 接口 =&gt; 系统范围、接口 QPS/占比</p>","r":{"minutes":2.8,"words":839},"t":"测试专项 - 全链路压测与故障演练","y":"a"} }],
  ["/posts/QA/10%20%E5%BA%A6%E9%87%8F%E4%B8%8E%E8%BF%90%E8%90%A5%20-%20%E6%A6%82%E8%BF%B0.html", { loader: () => import(/* webpackChunkName: "posts_QA_10 度量与运营 - 概述.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/10 度量与运营 - 概述.html.js"), meta: {"d":1597449600000,"l":"2020年8月15日","g":["质量保障"],"v":"/assets/images/cover3.jpg","e":"<blockquote>\n<p>质量运营，是将运营的思路注入到质量评估与改进工作中，它着眼于产品的全生命周期，以质量为中心，以数据为驱动，通过建设持续迭代的质量保障体系，最终提升交付质量。质量度量是其中的关键一环，为运营持续提供客观、准确的数据。</p>\n</blockquote>\n<p><a href=\"https://tech.meituan.com/2018/05/11/quality-operation-in-zcm.html\" target=\"_blank\" rel=\"noopener noreferrer\">质量运营在智能支付业务测试中的初步实践</a></p>\n","r":{"minutes":0.49,"words":148},"t":"度量与运营 - 概述","y":"a"} }],
  ["/posts/QA/11%20%E5%BA%A6%E9%87%8F%E4%B8%8E%E8%BF%90%E8%90%A5%20-%20%E7%89%88%E6%9C%AC%E8%B4%A8%E9%87%8F%E6%8A%A5%E5%91%8A.html", { loader: () => import(/* webpackChunkName: "posts_QA_11 度量与运营 - 版本质量报告.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/11 度量与运营 - 版本质量报告.html.js"), meta: {"d":1670803200000,"l":"2022年12月12日","g":["质量保障"],"v":"/assets/images/cover3.jpg","e":"<h2>概述</h2>\n<ul>\n<li>\n<p>What</p>\n<div class=\"language-markdown line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"markdown\" data-title=\"markdown\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">挖掘版本过程中暴露出的质量问题,并且制定相应地改进计划,从而达到解决当前痛点问题,提升交付质量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">与效率的目的。每个版本都会去做,这是一个持续迭代运营的过程。</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>两个误区 ❌</p>\n<div class=\"language-markdown line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"markdown\" data-title=\"markdown\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">版本质量总结 = 版本复盘会：复盘会是质量总结中非常关键一环，起到了承前启后的作用。但是不能忽视</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">其他环节的作用，整个版本选代流程是我们的研究对象,在这个过程中会产生非常多的质量数据供我们分析</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">归因;在复盘会后的改进是我们真正的目的，定期回顾进度也是质量运营的关键步骤。</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-markdown line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"markdown\" data-title=\"markdown\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">版本质量总结只是 QA 做的事情:质量总结依赖 QA/PM/RD 的各方协作,需要拉动产研同学一起参与,共同提</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">升版本质量</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n</ul>","r":{"minutes":5.41,"words":1622},"t":"度量与运营 - 版本质量报告","y":"a"} }],
  ["/posts/QA/12%20%E5%BA%A6%E9%87%8F%E4%B8%8E%E8%BF%90%E8%90%A5%20-%20%E4%BA%8B%E6%95%85%E5%A4%8D%E7%9B%98.html", { loader: () => import(/* webpackChunkName: "posts_QA_12 度量与运营 - 事故复盘.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/12 度量与运营 - 事故复盘.html.js"), meta: {"d":1673308800000,"l":"2023年1月10日","g":["质量保障"],"v":"/assets/images/cover3.jpg","e":"<h3>几个常用方法论</h3>\n<ul>\n<li>5w1h</li>\n<li>5why</li>\n<li>PDCA</li>\n</ul>\n<h3>Tips</h3>\n<ol>\n<li>改进方案可落地（具体内容、时间节点、跟进人），避免出现 xxx 流程优化之类宽泛的术语</li>\n<li>是否加入改进方案：能否事故降级、能否规避/预防类似问题</li>\n<li>改进方案优先考虑使用工具解决</li>\n<li>红线行为约束：\n<ul>\n<li>研发红线：CR 逃逸、代码夹带、上线未观察....</li>\n<li>测试红线：用例未执行、核心场景漏测</li>\n</ul>\n</li>\n</ol>\n","r":{"minutes":7.96,"words":2388},"t":"度量与运营 - 事故复盘","y":"a"} }],
  ["/posts/QA/13%20%E5%BA%A6%E9%87%8F%E4%B8%8E%E8%BF%90%E8%90%A5%20-%20%E5%A4%A7%E5%9E%8B%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%B4%A8%E9%87%8F%E4%BF%9D%E9%9A%9C.html", { loader: () => import(/* webpackChunkName: "posts_QA_13 度量与运营 - 大型项目的质量保障.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/13 度量与运营 - 大型项目的质量保障.html.js"), meta: {"d":1656633600000,"l":"2022年7月1日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<blockquote>\n<p>具体的方案设计还需要综合考量 QA/RD 团队、规范现状、公司技术栈及工具能力等诸多因素，这里仅仅是相对通用的理解</p>\n</blockquote>\n<figure><img src=\"https://swtywang.fun/minio//blog/89b70fdd54eb07efd2b353635a33823a.png\" alt=\"whiteboard_exported_image\" tabindex=\"0\" loading=\"lazy\"><figcaption>whiteboard_exported_image</figcaption></figure>","r":{"minutes":3.12,"words":937},"t":"度量与运营 - 大型项目质量方案设计","y":"a"} }],
  ["/posts/QA/14%20%E8%B4%A8%E9%87%8F%E6%9E%B6%E6%9E%84%20-%20%20%E6%B5%81%E9%87%8F%E5%BD%95%E5%88%B6%E5%9B%9E%E6%94%BE%E5%B9%B3%E5%8F%B0.html", { loader: () => import(/* webpackChunkName: "posts_QA_14 质量架构 -  流量录制回放平台.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/14 质量架构 -  流量录制回放平台.html.js"), meta: {"d":1652227200000,"l":"2022年5月11日","g":["质量架构"],"v":"/assets/images/cover4.jpg","e":"<h2>业界实现</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">方案名称</th>\n<th style=\"text-align:center\">录制原理</th>\n<th style=\"text-align:center\">RPC</th>\n<th style=\"text-align:center\">HTTP</th>\n<th style=\"text-align:center\">写接口 MOCK</th>\n<th>支持语言</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://github.com/alibaba/jvm-sandbox-repeater\" target=\"_blank\" rel=\"noopener noreferrer\">jvm-sandbox-repeater</a> - 阿里</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/alibaba/jvm-sandbox\" target=\"_blank\" rel=\"noopener noreferrer\">JVM-SANDBOX</a></td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">✅</td>\n<td>Java</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://developer.aliyun.com/article/278811\" target=\"_blank\" rel=\"noopener noreferrer\">DOOM</a> - 阿里</td>\n<td style=\"text-align:center\">字节码增强 AOP</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\"></td>\n<td>Java</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://github.com/didi/sharingan\" target=\"_blank\" rel=\"noopener noreferrer\">写轮眼</a> - 滴滴</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/didi/sharingan/wiki/%E6%B5%81%E9%87%8F%E5%BD%95%E5%88%B6%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86\" target=\"_blank\" rel=\"noopener noreferrer\">修改 Golang pcap 源码，类似 tcpdump</a></td>\n<td style=\"text-align:center\">❌</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">❌</td>\n<td>Go</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://tech.meituan.com/2018/09/27/quake-introduction.html\" target=\"_blank\" rel=\"noopener noreferrer\">Quake</a> - 美团</td>\n<td style=\"text-align:center\">RPC 框架改造/Nginx</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">❌</td>\n<td>Java</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://juejin.cn/post/6857688805835866126\" target=\"_blank\" rel=\"noopener noreferrer\">ByteCopy</a> - 字节</td>\n<td style=\"text-align:center\">基于 TCPCopy 的自研</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">❌</td>\n<td>Go</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://github.com/twitter-archive/diffy\" target=\"_blank\" rel=\"noopener noreferrer\">diffy</a> - Twitter</td>\n<td style=\"text-align:center\">网络层代理</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\"></td>\n<td>不限</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://github.com/vivo/MoonBox\" target=\"_blank\" rel=\"noopener noreferrer\">Moonbox(月光宝盒)</a> -VIVO</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/alibaba/jvm-sandbox-repeater\" target=\"_blank\" rel=\"noopener noreferrer\">JVM-SANDBOX &amp; jvm-sandbox-repeater</a></td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">✅</td>\n<td>Java</td>\n</tr>\n</tbody>\n</table>","r":{"minutes":8.23,"words":2468},"t":"质量架构 - 流量录制回放平台","y":"a"} }],
  ["/posts/QA/15%20%E8%B4%A8%E9%87%8F%E6%9E%B6%E6%9E%84%20-%20%20Java%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87.html", { loader: () => import(/* webpackChunkName: "posts_QA_15 质量架构 -  Java代码覆盖率.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/15 质量架构 -  Java代码覆盖率.html.js"), meta: {"d":1707609600000,"l":"2024年2月11日","g":["质量架构"],"v":"/assets/images/cover2.jpg","e":"<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">Jacoco/Super-jacoco</th>\n<th style=\"text-align:center\">JVM-SANDOBX</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Github</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/didi/super-jacoco\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/didi/super-jacoco</a> 454 star<br> <a href=\"https://github.com/jacoco/jacoco\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/jacoco/jacoco</a> 4k star</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/alibaba/jvm-sandbox\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/alibaba/jvm-sandbox</a> 6.6k star</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">定位</td>\n<td style=\"text-align:center\">开源的覆盖率工具</td>\n<td style=\"text-align:center\">一种 JVM 的非侵入式运行期 AOP 解决方案，可用于故障定位、链路追踪、录制回放等场景</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">插桩原理</td>\n<td style=\"text-align:center\">字节码增强</td>\n<td style=\"text-align:center\">基于 Instrumentation 的动态字节码增强</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">插桩</td>\n<td style=\"text-align:center\">jacoco-agent.jar 无需改造</td>\n<td style=\"text-align:center\">支持，需要开发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">识别 header</td>\n<td style=\"text-align:center\">不支持，目前没看到较好的实现</td>\n<td style=\"text-align:center\">支持，需要开发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">增量覆盖率</td>\n<td style=\"text-align:center\">super-jacoco 已支持，无需改造</td>\n<td style=\"text-align:center\">支持，需要开发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">覆盖率数据收集&amp; 报告生成</td>\n<td style=\"text-align:center\">原生 dump + merge + report，无需改造</td>\n<td style=\"text-align:center\">不支持，自定义数据结构</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">跨线程传递</td>\n<td style=\"text-align:center\">不支持</td>\n<td style=\"text-align:center\">支持</td>\n</tr>\n</tbody>\n</table>","r":{"minutes":3.97,"words":1191},"t":"质量架构 -  Java代码覆盖率","y":"a"} }],
  ["/posts/QA/16%20%E8%B4%A8%E9%87%8F%E6%9E%B6%E6%9E%84%20-%20%20UI%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B9%B3%E5%8F%B0.html", { loader: () => import(/* webpackChunkName: "posts_QA_16 质量架构 -  UI自动化平台.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/16 质量架构 -  UI自动化平台.html.js"), meta: {"d":1705017600000,"l":"2024年1月12日","g":["质量架构"],"v":"/assets/images/cover2.jpg","e":"<blockquote>\n<p>UI 自动化测试平台 整体建设实践已在 QECON 大会以及期刊中做了分享。</p>\n<p>本文主要梳理部分技术实现细节和思路，由于使用的都是开源技术且很多也是受别人分享的启发，应该会具有通用性</p>\n</blockquote>\n<h2>UI 自动化业界调研</h2>\n<h3>现有平台/产品</h3>\n<h4><a class=\"header-anchor\" href=\"#_1-云测-testin\"><span>1. </span></a><a href=\"https://www.testin.cn/business/landing/test_autorec.htm\" target=\"_blank\" rel=\"noopener noreferrer\">云测 testin</a></h4>","r":{"minutes":5.75,"words":1725},"t":"质量架构 -  UI自动化平台","y":"a"} }],
  ["/posts/QA/17%20%E8%B4%A8%E9%87%8F%E6%9E%B6%E6%9E%84%20-%20%20%E7%AE%97%E6%B3%95%E6%9C%8D%E5%8A%A1%E4%B8%AD%E5%BF%83.html", { loader: () => import(/* webpackChunkName: "posts_QA_17 质量架构 -  算法服务中心.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/17 质量架构 -  算法服务中心.html.js"), meta: {"t":"质量架构 -  算法服务中心"} }],
  ["/posts/QA/18%20%E8%B4%A8%E9%87%8F%E6%9E%B6%E6%9E%84%20-%20%20Selenium%20Grid.html", { loader: () => import(/* webpackChunkName: "posts_QA_18 质量架构 -  Selenium Grid.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/18 质量架构 -  Selenium Grid.html.js"), meta: {"d":1694390400000,"l":"2023年9月11日","g":["质量架构"],"v":"/assets/images/cover2.jpg","e":"<blockquote>\n<p>UI 自动化平台有并发执行和本地调试的诉求，需要使用到<a href=\"https://www.selenium.dev/documentation/grid/\" target=\"_blank\" rel=\"noopener noreferrer\">Selenium Grid</a>，学习一下</p>\n</blockquote>\n<h2>基本介绍</h2>\n<p>Selenium Grid 通过将客户端发送的命令路由到远程浏览器实例，允许在远程机器上执行 WebDriver 脚本。基本功能：</p>\n<ul>\n<li>\n<p>提供一种在多台机器上并行运行测试的方法</p>\n</li>\n<li>\n<p>允许在不同浏览器版本上进行测试</p>\n</li>\n<li>\n<p>支持本地调试</p>\n</li>\n<li>\n<p>实现跨平台测试</p>\n</li>\n</ul>","r":{"minutes":7.25,"words":2174},"t":"质量架构 - Selenium Grid","y":"a"} }],
  ["/posts/QA/19%20%E8%B4%A8%E9%87%8F%E6%9E%B6%E6%9E%84%20-%20%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B9%B3%E5%8F%B0.html", { loader: () => import(/* webpackChunkName: "posts_QA_19 质量架构 - 接口自动化平台.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/19 质量架构 - 接口自动化平台.html.js"), meta: {"d":1694390400000,"l":"2023年9月11日","g":["质量架构"],"v":"/assets/images/cover2.jpg","e":"<blockquote>\n<p>接口自动化属于质量保障的必备手段，梳理一下接口自动化平台的相关内容</p>\n</blockquote>\n<h2>平台核心功能</h2>\n<blockquote>\n<p>无论是哪种产品形态，接口自动化平台都应该具备这些能力</p>\n</blockquote>\n<h2>自动化平台形态（用户视角）</h2>\n<ul>\n<li>根据自动化用例的托管方式，可以分为平台托管和用户托管。</li>\n<li>根据用户触发方式，可以分为 Jenkins 触发和平台触发。</li>\n<li>根据自动化用例的实现形式，可以分为低代码方式和编码方式。</li>\n</ul>\n<h3>1. 低代码平台</h3>","r":{"minutes":1.34,"words":403},"t":"质量架构 - 接口自动化平台","y":"a"} }],
  ["/posts/QA/20%20%E8%B4%A8%E9%87%8F%E6%9E%B6%E6%9E%84%20-%20%E5%B9%B3%E5%8F%B0%E5%B7%A5%E5%85%B7.html", { loader: () => import(/* webpackChunkName: "posts_QA_20 质量架构 - 平台工具.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/20 质量架构 - 平台工具.html.js"), meta: {"d":1618099200000,"l":"2021年4月11日","g":["质量架构"],"v":"https://swtywang.fun/minio//blog/e41fe2851151f08974ad4b949e3cada5.png","e":"<h2>价值</h2>\n<figure><img src=\"https://swtywang.fun/minio//blog/e41fe2851151f08974ad4b949e3cada5.png\" alt=\"效能工具价值\" tabindex=\"0\" loading=\"lazy\"><figcaption>效能工具价值</figcaption></figure>\n<p>总体来说，效能工具的主要目标与业务高度一致，即持续提升业务质量和效率，同时也需要辅助 QA/RD 实现有效的度量运营工作。</p>\n<h3>提升质量</h3>\n<p>完全基于\"人\"的测试通常会存在几个质量隐患：</p>\n<ul>\n<li>每个 QA 在业务理解、测试设计覆盖度等维度都因为经验能力差异而不尽相同</li>\n<li>测试执行中小概率的遗漏 / QA 红线行为</li>\n<li>影响范围评估不准</li>\n<li>不可测问题（包含性能探测）</li>\n<li>......</li>\n</ul>","r":{"minutes":2.42,"words":726},"t":"质量架构 - 平台工具","y":"a"} }],
  ["/posts/QA/%E6%B5%8B%E8%AF%95%E6%8A%80%E6%9C%AF%20-%20%E5%BC%82%E5%B8%B8%E6%B5%8B%E8%AF%95.html", { loader: () => import(/* webpackChunkName: "posts_QA_测试技术 - 异常测试.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/测试技术 - 异常测试.html.js"), meta: {"d":1680307200000,"l":"2023年4月1日","g":["质量保障"],"v":"/assets/images/cover4.jpg","e":"<blockquote>\n<p>随着业务发展，业务复杂度提升以及用户量级的提升，不可避免地会遇到异常场景的失败，最终引发客诉甚至事故，异常场景覆盖能够提升系统的健壮性</p>\n</blockquote>\n<h2>基本概念</h2>\n<p>异常测试，是检测被测对象对异常情况的处理。</p>\n<ul>\n<li>通过模拟异常的输入、异常的用户操作、或异常的访问场景验证被测对象（完整的系统、功能模块、函数方法等）是否能正常处理，而不是导致了错误；</li>\n<li>测试系统是否给出了清晰且充分的提示或约束。</li>\n</ul>\n<h2>异常分类</h2>\n<figure><img src=\"https://swtywang.fun/minio//blog/aa576a3aac5b4f10ac69aa7786c93fb7.png\" alt=\"异常场景\" tabindex=\"0\" loading=\"lazy\"><figcaption>异常场景</figcaption></figure>","r":{"minutes":1.34,"words":402},"t":"测试技术 - 异常测试","y":"a"} }],
  ["/posts/%E8%BF%90%E7%BB%B4/00%20%E6%B7%B7%E6%B2%8C%E5%B7%A5%E7%A8%8B.html", { loader: () => import(/* webpackChunkName: "posts_运维_00 混沌工程.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/运维/00 混沌工程.html.js"), meta: {"d":1605830400000,"l":"2020年11月20日","g":["运维"],"v":"https://swtywang.fun/minio//blog/a1aaf670f82c93234364d473bb03d853.jpg","e":"<blockquote>\n<p>运维部大佬推广故障演练，也介绍了混沌工程的概念。正好最近在搜集故障注入资料时也看到了 ChaosBlade，搬运一些资料扫个盲</p>\n</blockquote>\n<h2>1. 什么是混沌工程（Chaos Engineering）</h2>\n<p><strong>混沌工程是一门在系统上进行实验的学科，其目的是为了建立对大规模分布式系统能力的信心，使其能够在生产环境中弹性应对各种突发性故障。</strong></p>\n<p>在整个分布式系统中，即使每一个单体服务运转良好，服务与服务之间的通信和交互也会带来不可预测的结果，再加上现实世界中一些罕见但破坏性极强的事件（比如机房突然断电、地震等），导致整个分布式系统在本质上混乱的。我们需要一套能够在分布式系统出现异常问题前发现这些系统弱点的方法论，这些系统性弱点包括：</p>","r":{"minutes":8.44,"words":2533},"t":"混沌工程","y":"a"} }],
  ["/posts/%E8%BF%90%E7%BB%B4/01%20ELK%20_%20Grafana.html", { loader: () => import(/* webpackChunkName: "posts_运维_01 ELK _ Grafana.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/运维/01 ELK _ Grafana.html.js"), meta: {"d":1652313600000,"l":"2022年5月12日","g":["运维"],"v":"https://swtywang.fun/minio/blog/ad28de41d13b71db1e00d9e796634f91.webp","e":"<h2>ELK</h2>\n<blockquote>\n<p>随着排查问题越来越频繁以及有 ERROR 日志巡检的需要，需要搭建一套自己的 ELK 日志平台</p>\n</blockquote>\n<h3>整体流程</h3>\n<figure><img src=\"https://swtywang.fun/minio/blog/ad28de41d13b71db1e00d9e796634f91.webp\" alt=\"1_gg4lsZCO1QQbhpV7DsP8vA\" tabindex=\"0\" loading=\"lazy\"><figcaption>1_gg4lsZCO1QQbhpV7DsP8vA</figcaption></figure>","r":{"minutes":4.95,"words":1485},"t":"ELK & Grafana","y":"a"} }],
  ["/posts/%E8%BF%90%E7%BB%B4/02%20Zabbix.html", { loader: () => import(/* webpackChunkName: "posts_运维_02 Zabbix.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/运维/02 Zabbix.html.js"), meta: {"d":1605830400000,"l":"2020年11月20日","g":["运维"],"v":"/assets/images/cover4.jpg","r":{"minutes":0.06,"words":19},"t":"Zabbix","y":"a"} }],
  ["/404.html", { loader: () => import(/* webpackChunkName: "404.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/404.html.js"), meta: {"t":""} }],
  ["/posts/AI/", { loader: () => import(/* webpackChunkName: "posts_AI_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/AI/index.html.js"), meta: {"t":"AI"} }],
  ["/posts/", { loader: () => import(/* webpackChunkName: "posts_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/index.html.js"), meta: {"t":"Posts"} }],
  ["/posts/%E6%9D%82%E8%B4%A7%E9%93%BA/", { loader: () => import(/* webpackChunkName: "posts_杂货铺_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/杂货铺/index.html.js"), meta: {"t":"杂货铺"} }],
  ["/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/", { loader: () => import(/* webpackChunkName: "posts_后端开发_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/index.html.js"), meta: {"t":"后端开发"} }],
  ["/posts/QA/", { loader: () => import(/* webpackChunkName: "posts_QA_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/index.html.js"), meta: {"t":"QA"} }],
  ["/posts/%E8%BF%90%E7%BB%B4/", { loader: () => import(/* webpackChunkName: "posts_运维_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/运维/index.html.js"), meta: {"t":"运维"} }],
  ["/category/", { loader: () => import(/* webpackChunkName: "category_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/category/index.html.js"), meta: {"t":"分类","I":false} }],
  ["/category/ai/", { loader: () => import(/* webpackChunkName: "category_ai_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/category/ai/index.html.js"), meta: {"t":"AI 分类","I":false} }],
  ["/category/server/", { loader: () => import(/* webpackChunkName: "category_server_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/category/server/index.html.js"), meta: {"t":"server 分类","I":false} }],
  ["/tag/", { loader: () => import(/* webpackChunkName: "tag_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/tag/index.html.js"), meta: {"t":"标签","I":false} }],
  ["/tag/ai/", { loader: () => import(/* webpackChunkName: "tag_ai_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/tag/ai/index.html.js"), meta: {"t":"标签: AI","I":false} }],
  ["/tag/%E8%B4%A8%E9%87%8F%E6%9E%B6%E6%9E%84/", { loader: () => import(/* webpackChunkName: "tag_质量架构_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/tag/质量架构/index.html.js"), meta: {"t":"标签: 质量架构","I":false} }],
  ["/tag/%E8%B4%A8%E9%87%8F%E4%BF%9D%E9%9A%9C/", { loader: () => import(/* webpackChunkName: "tag_质量保障_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/tag/质量保障/index.html.js"), meta: {"t":"标签: 质量保障","I":false} }],
  ["/tag/%E5%89%8D%E7%AB%AF/", { loader: () => import(/* webpackChunkName: "tag_前端_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/tag/前端/index.html.js"), meta: {"t":"标签: 前端","I":false} }],
  ["/tag/%E9%87%91%E8%9E%8D/", { loader: () => import(/* webpackChunkName: "tag_金融_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/tag/金融/index.html.js"), meta: {"t":"标签: 金融","I":false} }],
  ["/tag/java/", { loader: () => import(/* webpackChunkName: "tag_java_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/tag/java/index.html.js"), meta: {"t":"标签: Java","I":false} }],
  ["/tag/server/", { loader: () => import(/* webpackChunkName: "tag_server_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/tag/server/index.html.js"), meta: {"t":"标签: server","I":false} }],
  ["/tag/%E5%BE%AE%E6%9C%8D%E5%8A%A1/", { loader: () => import(/* webpackChunkName: "tag_微服务_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/tag/微服务/index.html.js"), meta: {"t":"标签: 微服务","I":false} }],
  ["/tag/%E8%BF%90%E7%BB%B4/", { loader: () => import(/* webpackChunkName: "tag_运维_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/tag/运维/index.html.js"), meta: {"t":"标签: 运维","I":false} }],
  ["/article/", { loader: () => import(/* webpackChunkName: "article_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/article/index.html.js"), meta: {"t":"文章","I":false} }],
  ["/star/", { loader: () => import(/* webpackChunkName: "star_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/star/index.html.js"), meta: {"t":"星标","I":false} }],
  ["/timeline/", { loader: () => import(/* webpackChunkName: "timeline_index.html" */"/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/timeline/index.html.js"), meta: {"t":"时间轴","I":false} }],
]);

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updateRoutes) {
    __VUE_HMR_RUNTIME__.updateRoutes(routes)
  }
  if (__VUE_HMR_RUNTIME__.updateRedirects) {
    __VUE_HMR_RUNTIME__.updateRedirects(redirects)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ routes, redirects }) => {
    __VUE_HMR_RUNTIME__.updateRoutes(routes)
    __VUE_HMR_RUNTIME__.updateRedirects(redirects)
  })
}
