import comp from "/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/AI/04 大模型在测试领域的探索.html.vue"
const data = JSON.parse("{\"path\":\"/posts/AI/04%20%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%9C%A8%E6%B5%8B%E8%AF%95%E9%A2%86%E5%9F%9F%E7%9A%84%E6%8E%A2%E7%B4%A2.html\",\"title\":\"大模型在测试领域的探索\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"大模型在测试领域的探索\",\"date\":\"2024-03-04T00:00:00.000Z\",\"cover\":\"/assets/images/cover4.jpg\",\"headerMask\":\"rgba(40, 57, 101, .4)\",\"catalog\":true,\"tags\":[\"AI\",\"质量架构\"],\"gitInclude\":[],\"description\":\"一些看法 大模型已抢占各类互联网大会、社区博客的头条，测试领域也已经有非常多的讨论。 我认为现处于探索>>实际落地的阶段，主要因为以下几个原因： 无法控制大模型的\\\"涌现\\\"能力：主流的技术路线 LangChain + RAG + Agent 可以快速上手并看到一些\\\"效果\\\"。但是，目前只看到了 demo 级别的成功，因为预期结果不够稳定 甚至无法预知，进而...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://swtywang/posts/AI/04%20%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%9C%A8%E6%B5%8B%E8%AF%95%E9%A2%86%E5%9F%9F%E7%9A%84%E6%8E%A2%E7%B4%A2.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"swtywang's homepage\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"大模型在测试领域的探索\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"一些看法 大模型已抢占各类互联网大会、社区博客的头条，测试领域也已经有非常多的讨论。 我认为现处于探索>>实际落地的阶段，主要因为以下几个原因： 无法控制大模型的\\\"涌现\\\"能力：主流的技术路线 LangChain + RAG + Agent 可以快速上手并看到一些\\\"效果\\\"。但是，目前只看到了 demo 级别的成功，因为预期结果不够稳定 甚至无法预知，进而...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://swtywang/assets/images/cover4.jpg\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:src\",\"content\":\"https://swtywang/assets/images/cover4.jpg\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"大模型在测试领域的探索\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"AI\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"质量架构\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2024-03-04T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"大模型在测试领域的探索\\\",\\\"image\\\":[\\\"https://swtywang/assets/images/cover4.jpg\\\"],\\\"datePublished\\\":\\\"2024-03-04T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"swtywang\\\",\\\"url\\\":\\\"https:www.baidu.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"一些看法\",\"slug\":\"一些看法\",\"link\":\"#一些看法\",\"children\":[]},{\"level\":2,\"title\":\"有用的工具\",\"slug\":\"有用的工具\",\"link\":\"#有用的工具\",\"children\":[]},{\"level\":2,\"title\":\"测试领域的实践\",\"slug\":\"测试领域的实践\",\"link\":\"#测试领域的实践\",\"children\":[{\"level\":3,\"title\":\"GPT4V 在 UI 自动化测试的应用\",\"slug\":\"gpt4v-在-ui-自动化测试的应用\",\"link\":\"#gpt4v-在-ui-自动化测试的应用\",\"children\":[]},{\"level\":3,\"title\":\"单元测试生成\",\"slug\":\"单元测试生成\",\"link\":\"#单元测试生成\",\"children\":[]},{\"level\":3,\"title\":\"需求生成测试用例\",\"slug\":\"需求生成测试用例\",\"link\":\"#需求生成测试用例\",\"children\":[]},{\"level\":3,\"title\":\"接口自动化生成\",\"slug\":\"接口自动化生成\",\"link\":\"#接口自动化生成\",\"children\":[]}]}],\"readingTime\":{\"minutes\":3.17,\"words\":951},\"filePathRelative\":\"posts/AI/04 大模型在测试领域的探索.md\",\"localizedDate\":\"2024年3月4日\",\"excerpt\":\"\\n<h2>一些看法</h2>\\n<blockquote>\\n<p>大模型已抢占各类互联网大会、社区博客的头条，测试领域也已经有非常多的讨论。</p>\\n</blockquote>\\n<p>我认为现处于探索&gt;&gt;实际落地的阶段，主要因为以下几个原因：</p>\\n<ol>\\n<li>无法控制大模型的\\\"涌现\\\"能力：主流的技术路线 LangChain + RAG + Agent 可以快速上手并看到一些\\\"效果\\\"。但是，目前只看到了 demo 级别的成功，因为预期结果不够稳定 甚至无法预知，进而无法大规模落地。</li>\\n<li>RAG 的数据质量：RAG 其实与大模型无关，主要是向量数据库的 topk 问题，他很大程度取决于训练数据结构、分词策略、embedding model、re-rank 策略等等，需要大量的实践经验。</li>\\n<li>代码生成有点鸡肋：代码生成的难点在于输入参数与业务的融合以及断言逻辑，与传统的单测/接口用例生成效果相比，大模型生成并没有很大的提升。各大厂商的 IDE 助手并没有很惊艳的感觉。</li>\\n<li>GPT4 比开源模型更加强大：由于数据安全的考虑，在方案落地时需要选用开源本地大模型，避免数据泄露。而诸多的本地大模型的体验效果比 GPT4 还是会有较大差距（Qwen2 据说很不错，还没有试用）</li>\\n<li>大模型微调需要消耗大量的资源，以及有较高的技术门槛。</li>\\n</ol>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
