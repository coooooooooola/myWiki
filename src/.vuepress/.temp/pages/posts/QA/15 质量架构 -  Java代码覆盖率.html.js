import comp from "/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/QA/15 质量架构 -  Java代码覆盖率.html.vue"
const data = JSON.parse("{\"path\":\"/posts/QA/15%20%E8%B4%A8%E9%87%8F%E6%9E%B6%E6%9E%84%20-%20%20Java%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87.html\",\"title\":\"质量架构 -  Java代码覆盖率\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"质量架构 -  Java代码覆盖率\",\"date\":\"2024-02-11T00:00:00.000Z\",\"cover\":\"/assets/images/cover2.jpg\",\"headerMask\":\"rgba(40, 57, 101, .4)\",\"catalog\":true,\"tags\":[\"质量架构\"],\"gitInclude\":[],\"description\":\"Jacoco/Super-jacoco JaCoCo 通过修改字节码的方式来插入探针，这会导致一定程度上的“侵入性”，因为它需要在编译后的字节码中插入额外的代码，永久改变类文件。 核心流程 JaCoCo 主要通过修改 Java 类的字节码来实现覆盖率分析。它会在编译后的 Java 类文件（即 .class 文件）中插入额外的字节码指令，这些指令称为探针...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://swtywang/posts/QA/15%20%E8%B4%A8%E9%87%8F%E6%9E%B6%E6%9E%84%20-%20%20Java%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"swtywang's homepage\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"质量架构 -  Java代码覆盖率\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Jacoco/Super-jacoco JaCoCo 通过修改字节码的方式来插入探针，这会导致一定程度上的“侵入性”，因为它需要在编译后的字节码中插入额外的代码，永久改变类文件。 核心流程 JaCoCo 主要通过修改 Java 类的字节码来实现覆盖率分析。它会在编译后的 Java 类文件（即 .class 文件）中插入额外的字节码指令，这些指令称为探针...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://swtywang/assets/images/cover2.jpg\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:src\",\"content\":\"https://swtywang/assets/images/cover2.jpg\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"质量架构 -  Java代码覆盖率\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"质量架构\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2024-02-11T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"质量架构 -  Java代码覆盖率\\\",\\\"image\\\":[\\\"https://swtywang/assets/images/cover2.jpg\\\"],\\\"datePublished\\\":\\\"2024-02-11T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"swtywang\\\",\\\"url\\\":\\\"https:www.baidu.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"Jacoco/Super-jacoco\",\"slug\":\"jacoco-super-jacoco\",\"link\":\"#jacoco-super-jacoco\",\"children\":[{\"level\":3,\"title\":\"核心流程\",\"slug\":\"核心流程\",\"link\":\"#核心流程\",\"children\":[]}]},{\"level\":2,\"title\":\"JVM-SANDBOX\",\"slug\":\"jvm-sandbox\",\"link\":\"#jvm-sandbox\",\"children\":[{\"level\":3,\"title\":\"premain\",\"slug\":\"premain\",\"link\":\"#premain\",\"children\":[]},{\"level\":3,\"title\":\"agentmain\",\"slug\":\"agentmain\",\"link\":\"#agentmain\",\"children\":[]}]}],\"readingTime\":{\"minutes\":3.97,\"words\":1191},\"filePathRelative\":\"posts/QA/15 质量架构 -  Java代码覆盖率.md\",\"localizedDate\":\"2024年2月11日\",\"excerpt\":\"<table>\\n<thead>\\n<tr>\\n<th style=\\\"text-align:center\\\"></th>\\n<th style=\\\"text-align:center\\\">Jacoco/Super-jacoco</th>\\n<th style=\\\"text-align:center\\\">JVM-SANDOBX</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\\"text-align:center\\\">Github</td>\\n<td style=\\\"text-align:center\\\"><a href=\\\"https://github.com/didi/super-jacoco\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://github.com/didi/super-jacoco</a> 454 star<br> <a href=\\\"https://github.com/jacoco/jacoco\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://github.com/jacoco/jacoco</a> 4k star</td>\\n<td style=\\\"text-align:center\\\"><a href=\\\"https://github.com/alibaba/jvm-sandbox\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://github.com/alibaba/jvm-sandbox</a> 6.6k star</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">定位</td>\\n<td style=\\\"text-align:center\\\">开源的覆盖率工具</td>\\n<td style=\\\"text-align:center\\\">一种 JVM 的非侵入式运行期 AOP 解决方案，可用于故障定位、链路追踪、录制回放等场景</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">插桩原理</td>\\n<td style=\\\"text-align:center\\\">字节码增强</td>\\n<td style=\\\"text-align:center\\\">基于 Instrumentation 的动态字节码增强</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">插桩</td>\\n<td style=\\\"text-align:center\\\">jacoco-agent.jar 无需改造</td>\\n<td style=\\\"text-align:center\\\">支持，需要开发</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">识别 header</td>\\n<td style=\\\"text-align:center\\\">不支持，目前没看到较好的实现</td>\\n<td style=\\\"text-align:center\\\">支持，需要开发</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">增量覆盖率</td>\\n<td style=\\\"text-align:center\\\">super-jacoco 已支持，无需改造</td>\\n<td style=\\\"text-align:center\\\">支持，需要开发</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">覆盖率数据收集&amp; 报告生成</td>\\n<td style=\\\"text-align:center\\\">原生 dump + merge + report，无需改造</td>\\n<td style=\\\"text-align:center\\\">不支持，自定义数据结构</td>\\n</tr>\\n<tr>\\n<td style=\\\"text-align:center\\\">跨线程传递</td>\\n<td style=\\\"text-align:center\\\">不支持</td>\\n<td style=\\\"text-align:center\\\">支持</td>\\n</tr>\\n</tbody>\\n</table>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
