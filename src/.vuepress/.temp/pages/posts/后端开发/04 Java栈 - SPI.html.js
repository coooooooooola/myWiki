import comp from "/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/04 Java栈 - SPI.html.vue"
const data = JSON.parse("{\"path\":\"/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/04%20Java%E6%A0%88%20-%20SPI.html\",\"title\":\"Java栈 - SPI\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Java栈 - SPI\",\"date\":\"2020-08-12T00:00:00.000Z\",\"cover\":\"https://swtywang.fun/minio/blog/a0f307f1e263d792ee09e70c1d81898f.jpg\",\"shortTitle\":\"Java栈 - SPI\",\"useHeaderImage\":false,\"headerMask\":\"rgba(40, 57, 101, .4)\",\"catalog\":true,\"tags\":[\"Java\",\"质量架构\"]},\"headers\":[{\"level\":2,\"title\":\"2.1 接口约定\",\"slug\":\"_2-1-接口约定\",\"link\":\"#_2-1-接口约定\",\"children\":[]},{\"level\":2,\"title\":\"2.2 服务实现\",\"slug\":\"_2-2-服务实现\",\"link\":\"#_2-2-服务实现\",\"children\":[]},{\"level\":2,\"title\":\"2.3 服务注册\",\"slug\":\"_2-3-服务注册\",\"link\":\"#_2-3-服务注册\",\"children\":[]},{\"level\":2,\"title\":\"2.4 服务发现与使用\",\"slug\":\"_2-4-服务发现与使用\",\"link\":\"#_2-4-服务发现与使用\",\"children\":[]},{\"level\":2,\"title\":\"4.1 Mysql DriverManager 实现\",\"slug\":\"_4-1-mysql-drivermanager-实现\",\"link\":\"#_4-1-mysql-drivermanager-实现\",\"children\":[]},{\"level\":2,\"title\":\"4.2 SpringBoot 启动\",\"slug\":\"_4-2-springboot-启动\",\"link\":\"#_4-2-springboot-启动\",\"children\":[]},{\"level\":2,\"title\":\"4.3 流量录制回放平台\",\"slug\":\"_4-3-流量录制回放平台\",\"link\":\"#_4-3-流量录制回放平台\",\"children\":[]}],\"git\":{},\"readingTime\":{\"minutes\":4.64,\"words\":1392},\"filePathRelative\":\"posts/后端开发/04 Java栈 - SPI.md\",\"localizedDate\":\"2020年8月12日\",\"excerpt\":\"\\n<p>SPI 全称 Service Provider Interface，是 Java 提供的一套用来被第三方实现或者扩展的 API，它可以用来启用框架扩展和替换组件。</p>\\n<figure><img src=\\\"https://swtywang.fun/minio/blog/a0f307f1e263d792ee09e70c1d81898f.jpg\\\" alt=\\\"SPI\\\" tabindex=\\\"0\\\" loading=\\\"lazy\\\"><figcaption>SPI</figcaption></figure>\\n<p>整体机制如上图，Java SPI 实际上是“<strong>基于接口的编程＋策略模式＋配置文件</strong>”组合实现的动态加载机制。</p>\"}")
export { comp, data }
