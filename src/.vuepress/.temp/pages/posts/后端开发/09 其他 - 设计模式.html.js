import comp from "/Users/swtywang/Coding/05 我的博客/my-docs-new/src/.vuepress/.temp/pages/posts/后端开发/09 其他 - 设计模式.html.vue"
const data = JSON.parse("{\"path\":\"/posts/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/09%20%E5%85%B6%E4%BB%96%20-%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html\",\"title\":\"其他 - 设计模式\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"其他 - 设计模式\",\"date\":\"2022-05-12T00:00:00.000Z\",\"cover\":\"/assets/images/cover4.jpg\",\"headerMask\":\"rgba(40, 57, 101, .4)\",\"catalog\":true,\"tags\":[\"Java\",\"server\"]},\"headers\":[{\"level\":2,\"title\":\"1. 工厂 + 策略模式\",\"slug\":\"_1-工厂-策略模式\",\"link\":\"#_1-工厂-策略模式\",\"children\":[{\"level\":3,\"title\":\"场景\",\"slug\":\"场景\",\"link\":\"#场景\",\"children\":[]},{\"level\":3,\"title\":\"模式概要\",\"slug\":\"模式概要\",\"link\":\"#模式概要\",\"children\":[]},{\"level\":3,\"title\":\"DEMO\",\"slug\":\"demo\",\"link\":\"#demo\",\"children\":[]}]},{\"level\":2,\"title\":\"2. 建造者\",\"slug\":\"_2-建造者\",\"link\":\"#_2-建造者\",\"children\":[{\"level\":3,\"title\":\"定义\",\"slug\":\"定义\",\"link\":\"#定义\",\"children\":[]},{\"level\":3,\"title\":\"使用场景\",\"slug\":\"使用场景\",\"link\":\"#使用场景\",\"children\":[]}]},{\"level\":2,\"title\":\"3. 责任链\",\"slug\":\"_3-责任链\",\"link\":\"#_3-责任链\",\"children\":[{\"level\":3,\"title\":\"定义\",\"slug\":\"定义-1\",\"link\":\"#定义-1\",\"children\":[]},{\"level\":3,\"title\":\"使用场景\",\"slug\":\"使用场景-1\",\"link\":\"#使用场景-1\",\"children\":[]},{\"level\":3,\"title\":\"DEMO\",\"slug\":\"demo-1\",\"link\":\"#demo-1\",\"children\":[]}]},{\"level\":2,\"title\":\"4. 单例模式\",\"slug\":\"_4-单例模式\",\"link\":\"#_4-单例模式\",\"children\":[]},{\"level\":2,\"title\":\"5. 观察者模式\",\"slug\":\"_5-观察者模式\",\"link\":\"#_5-观察者模式\",\"children\":[]},{\"level\":2,\"title\":\"6. 适配器模式\",\"slug\":\"_6-适配器模式\",\"link\":\"#_6-适配器模式\",\"children\":[]},{\"level\":2,\"title\":\"7.抽象工厂模式\",\"slug\":\"_7-抽象工厂模式\",\"link\":\"#_7-抽象工厂模式\",\"children\":[]}],\"git\":{},\"readingTime\":{\"minutes\":2.71,\"words\":813},\"filePathRelative\":\"posts/后端开发/09 其他 - 设计模式.md\",\"localizedDate\":\"2022年5月12日\",\"excerpt\":\"<h2>1. 工厂 + 策略模式</h2>\\n<h3>场景</h3>\\n<p>适合需要写很多 if/else 判断、具有相同属性/方法的多种实例调用，比如聚合支付、打折策略</p>\\n<h3>模式概要</h3>\\n<ul>\\n<li>工厂模式：工厂模式是一种创建型设计模式，它提供了一种创建对象的方式，而无需在代码中明确指定要创建的具体类。工厂模式通过定义一个接口或抽象类，让子类决定要实例化的类是哪一个，从而把对象的创建过程抽象化。</li>\\n<li>策略模式：策略模式是一种行为型设计模式，它定义了一系列算法，把它们一个个封装起来，并且使它们可以相互替换。本模式使得算法可以独立于使用它的客户端变化。通常包含公共接口类、策略实现类以及 Context</li>\\n</ul>\"}")
export { comp, data }
